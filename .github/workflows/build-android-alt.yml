name: Build Android APK (Alternative)

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: 🏗 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 🧹 Clean environment
        run: |
          # Remove any existing yarn.lock to prevent conflicts
          rm -f yarn.lock
          # Clear any existing node_modules
          rm -rf node_modules
          # Clear npm cache
          npm cache clean --force

      - name: 📦 Install dependencies with npm
        run: |
          echo "Installing dependencies with npm..."
          npm install
          echo "Verifying installation..."
          npm list --depth=0 || true

      - name: 🏗 Setup Expo and EAS
        run: |
          npm install -g @expo/cli@latest
          npm install -g eas-cli@latest
          expo --version
          eas --version

      - name: 🔐 Authenticate with Expo
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "Error: EXPO_TOKEN secret is not set"
            exit 1
          fi
          echo "Authenticating with Expo..."
          eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: ⚙️ Configure EAS Build
        run: |
          echo "Checking EAS configuration..."
          if [ ! -f "eas.json" ]; then
            echo "Creating eas.json..."
            cat > eas.json << EOF
          {
            "cli": {
              "version": ">= 5.9.0"
            },
            "build": {
              "preview": {
                "android": {
                  "buildType": "apk"
                }
              },
              "production": {
                "android": {
                  "buildType": "apk"
                }
              }
            }
          }
          EOF
          fi
          cat eas.json

      - name: 🚀 Build APK
        run: |
          echo "Starting EAS build..."
          eas build --platform android --profile preview --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📱 Download APK
        run: |
          echo "Downloading the built APK..."
          eas build:download --platform=android --latest --output=./

          # Find the APK file
          APK_FILE=$(find . -name "*.apk" -type f | head -1)
          if [ -f "$APK_FILE" ]; then
            echo "APK found: $APK_FILE"
            mv "$APK_FILE" "testapp-android.apk"
            ls -la testapp-android.apk
          else
            echo "Error: APK file not found"
            echo "Directory contents:"
            ls -la
            exit 1
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📤 Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-build-${{ github.run_number }}
          path: testapp-android.apk
          retention-days: 30

      - name: 🏷 Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: android-v${{ github.run_number }}
          name: TestApp Android APK v${{ github.run_number }}
          body: |
            🚀 **Android APK Build**

            📱 **Details:**
            - Build Number: ${{ github.run_number }}
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}

            📥 **Installation:**
            1. Download the APK file below
            2. Enable "Install from Unknown Sources" on your Android device
            3. Install the APK

            🔧 **Built with:**
            - React Native via Expo
            - EAS Build
            - GitHub Actions
          files: testapp-android.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
